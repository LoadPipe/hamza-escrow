/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IEscrowContract,
  IEscrowContractInterface,
} from "../../src/IEscrowContract";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "payer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct PaymentInput",
        name: "payment",
        type: "tuple",
      },
    ],
    name: "placePayment",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

export class IEscrowContract__factory {
  static readonly abi = _abi;
  static createInterface(): IEscrowContractInterface {
    return new Interface(_abi) as IEscrowContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IEscrowContract {
    return new Contract(address, _abi, runner) as unknown as IEscrowContract;
  }
}
