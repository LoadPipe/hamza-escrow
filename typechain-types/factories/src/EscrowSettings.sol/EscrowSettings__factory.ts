/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  EscrowSettings,
  EscrowSettingsInterface,
} from "../../../src/EscrowSettings.sol/EscrowSettings";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ISecurityContext",
        name: "securityContext",
        type: "address",
      },
      {
        internalType: "address",
        name: "vaultAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "feeBps_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "roleId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "UnauthorizedAccess",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddressArgument",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "changedBy",
        type: "address",
      },
    ],
    name: "FeeBpsChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "securityContext",
        type: "address",
      },
    ],
    name: "SecurityContextSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "changedBy",
        type: "address",
      },
    ],
    name: "VaultAddressChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "APPROVER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ARBITER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DAO_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAUSER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REFUNDER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SYSTEM_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeBps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "securityContext",
    outputs: [
      {
        internalType: "contract ISecurityContext",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "feeBps_",
        type: "uint256",
      },
    ],
    name: "setFeeBps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISecurityContext",
        name: "_securityContext",
        type: "address",
      },
    ],
    name: "setSecurityContext",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vaultAddress_",
        type: "address",
      },
    ],
    name: "setVaultAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vaultAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001394380380620013948339818101604052810190620000379190620003cd565b62000048836200010b60201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620000ba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000b1906200048a565b60405180910390fd5b81603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080603481905550505050620005a1565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000172576040517f26a1e04700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166391d148546000801b306040518363ffffffff1660e01b8152600401620001b2929190620004d8565b6020604051808303816000875af1158015620001d2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001f8919062000542565b508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614620002d857806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f051a1819cad198aaab96867fdf5e127eafe91783a6b4005a8caddb1a94303958620002be620002db60201b60201c565b82604051620002cf92919062000574565b60405180910390a15b50565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200031582620002e8565b9050919050565b6000620003298262000308565b9050919050565b6200033b816200031c565b81146200034757600080fd5b50565b6000815190506200035b8162000330565b92915050565b6200036c8162000308565b81146200037857600080fd5b50565b6000815190506200038c8162000361565b92915050565b6000819050919050565b620003a78162000392565b8114620003b357600080fd5b50565b600081519050620003c7816200039c565b92915050565b600080600060608486031215620003e957620003e8620002e3565b5b6000620003f9868287016200034a565b93505060206200040c868287016200037b565b92505060406200041f86828701620003b6565b9150509250925092565b600082825260208201905092915050565b7f496e76616c69645661756c744164647265737300000000000000000000000000600082015250565b60006200047260138362000429565b91506200047f826200043a565b602082019050919050565b60006020820190508181036000830152620004a58162000463565b9050919050565b6000819050919050565b620004c181620004ac565b82525050565b620004d28162000308565b82525050565b6000604082019050620004ef6000830185620004b6565b620004fe6020830184620004c7565b9392505050565b60008115159050919050565b6200051c8162000505565b81146200052857600080fd5b50565b6000815190506200053c8162000511565b92915050565b6000602082840312156200055b576200055a620002e3565b5b60006200056b848285016200052b565b91505092915050565b60006040820190506200058b6000830185620004c7565b6200059a6020830184620004c7565b9392505050565b610de380620005b16000396000f3fe6080604052600436106100c65760003560e01c806372c27b621161007f57806375b238fc1161005957806375b238fc1461025157806385535cc51461027c578063e63ab1e9146102a5578063e9c26518146102d0576100cd565b806372c27b62146101d457806372fe9938146101fd57806375071d2a14610226576100cd565b806324a9d853146100d25780634245962b146100fd578063430bf08a146101285780634d104adf146101535780635960ccf21461017e5780636412dd05146101a9576100cd565b366100cd57005b600080fd5b3480156100de57600080fd5b506100e76102fb565b6040516100f49190610a86565b60405180910390f35b34801561010957600080fd5b50610112610305565b60405161011f9190610aba565b60405180910390f35b34801561013457600080fd5b5061013d610329565b60405161014a9190610b16565b60405180910390f35b34801561015f57600080fd5b50610168610353565b6040516101759190610aba565b60405180910390f35b34801561018a57600080fd5b50610193610377565b6040516101a09190610aba565b60405180910390f35b3480156101b557600080fd5b506101be61039b565b6040516101cb9190610b90565b60405180910390f35b3480156101e057600080fd5b506101fb60048036038101906101f69190610bdc565b6103bf565b005b34801561020957600080fd5b50610224600480360381019061021f9190610c47565b61052d565b005b34801561023257600080fd5b5061023b61062d565b6040516102489190610aba565b60405180910390f35b34801561025d57600080fd5b50610266610651565b6040516102739190610aba565b60405180910390f35b34801561028857600080fd5b506102a3600480360381019061029e9190610ca0565b610658565b005b3480156102b157600080fd5b506102ba61085e565b6040516102c79190610aba565b60405180910390f35b3480156102dc57600080fd5b506102e5610882565b6040516102f29190610aba565b60405180910390f35b6000603454905090565b7f408a36151f841709116a4e8aca4e0202874f7f54687dcb863b1ea4672dc9d8cf81565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7fbb08418a67729a078f87bbc8d02a770929bb68f5bfdf134ae2ead6ed38e2f4ae81565b7fdb9556138406326f00296e13ea2ad7db24ba82381212d816b1a40c23b466b32781565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f3b5d4cc60d3ec3516ee8ae083bd60934f6eb2a6c54b1229985c41bfb092b260360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166391d14854826104256108a6565b6040518363ffffffff1660e01b8152600401610442929190610ccd565b6020604051808303816000875af1158015610461573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104859190610d2e565b6104cf57806104926108a6565b6040517f074540a20000000000000000000000000000000000000000000000000000000081526004016104c6929190610ccd565b60405180910390fd5b816034541461052957816034819055507fe9935ecaa85c02d153b4c4195bdabdbd7d1b20d824a25c5feb05d273203a17b360345433604051610512929190610d5b565b60405180910390a1603360009054906101000a9050505b5050565b6000801b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166391d14854826105766108a6565b6040518363ffffffff1660e01b8152600401610593929190610ccd565b6020604051808303816000875af11580156105b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d69190610d2e565b61062057806105e36108a6565b6040517f074540a2000000000000000000000000000000000000000000000000000000008152600401610617929190610ccd565b60405180910390fd5b610629826108ae565b5050565b7f5719df9ef2c4678b547f89e4f5ae410dbf400fc51cf3ded434c55f6adea2c43f81565b6000801b81565b7f3b5d4cc60d3ec3516ee8ae083bd60934f6eb2a6c54b1229985c41bfb092b260360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166391d14854826106be6108a6565b6040518363ffffffff1660e01b81526004016106db929190610ccd565b6020604051808303816000875af11580156106fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071e9190610d2e565b610768578061072b6108a6565b6040517f074540a200000000000000000000000000000000000000000000000000000000815260040161075f929190610ccd565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461085a5781603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fa4f45a63389e7031375b7e4422cccea56ab403ecedbd3ce1f0587acaa1999ae3603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633604051610851929190610d84565b60405180910390a15b5050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b7f3b5d4cc60d3ec3516ee8ae083bd60934f6eb2a6c54b1229985c41bfb092b260381565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610914576040517f26a1e04700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166391d148546000801b306040518363ffffffff1660e01b8152600401610952929190610ccd565b6020604051808303816000875af1158015610971573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109959190610d2e565b508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610a6a57806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f051a1819cad198aaab96867fdf5e127eafe91783a6b4005a8caddb1a94303958610a526108a6565b82604051610a61929190610d84565b60405180910390a15b50565b6000819050919050565b610a8081610a6d565b82525050565b6000602082019050610a9b6000830184610a77565b92915050565b6000819050919050565b610ab481610aa1565b82525050565b6000602082019050610acf6000830184610aab565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b0082610ad5565b9050919050565b610b1081610af5565b82525050565b6000602082019050610b2b6000830184610b07565b92915050565b6000819050919050565b6000610b56610b51610b4c84610ad5565b610b31565b610ad5565b9050919050565b6000610b6882610b3b565b9050919050565b6000610b7a82610b5d565b9050919050565b610b8a81610b6f565b82525050565b6000602082019050610ba56000830184610b81565b92915050565b600080fd5b610bb981610a6d565b8114610bc457600080fd5b50565b600081359050610bd681610bb0565b92915050565b600060208284031215610bf257610bf1610bab565b5b6000610c0084828501610bc7565b91505092915050565b6000610c1482610af5565b9050919050565b610c2481610c09565b8114610c2f57600080fd5b50565b600081359050610c4181610c1b565b92915050565b600060208284031215610c5d57610c5c610bab565b5b6000610c6b84828501610c32565b91505092915050565b610c7d81610af5565b8114610c8857600080fd5b50565b600081359050610c9a81610c74565b92915050565b600060208284031215610cb657610cb5610bab565b5b6000610cc484828501610c8b565b91505092915050565b6000604082019050610ce26000830185610aab565b610cef6020830184610b07565b9392505050565b60008115159050919050565b610d0b81610cf6565b8114610d1657600080fd5b50565b600081519050610d2881610d02565b92915050565b600060208284031215610d4457610d43610bab565b5b6000610d5284828501610d19565b91505092915050565b6000604082019050610d706000830185610a77565b610d7d6020830184610b07565b9392505050565b6000604082019050610d996000830185610b07565b610da66020830184610b07565b939250505056fea26469706673582212206d98dfadad70aadfbc948bb4d4e13fa83c1ce5193d037d24be4eaf7b7fb5b0d664736f6c63430008180033";

type EscrowSettingsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EscrowSettingsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EscrowSettings__factory extends ContractFactory {
  constructor(...args: EscrowSettingsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    securityContext: AddressLike,
    vaultAddress_: AddressLike,
    feeBps_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      securityContext,
      vaultAddress_,
      feeBps_,
      overrides || {}
    );
  }
  override deploy(
    securityContext: AddressLike,
    vaultAddress_: AddressLike,
    feeBps_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      securityContext,
      vaultAddress_,
      feeBps_,
      overrides || {}
    ) as Promise<
      EscrowSettings & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EscrowSettings__factory {
    return super.connect(runner) as EscrowSettings__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EscrowSettingsInterface {
    return new Interface(_abi) as EscrowSettingsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EscrowSettings {
    return new Contract(address, _abi, runner) as unknown as EscrowSettings;
  }
}
