/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SystemSettings,
  SystemSettingsInterface,
} from "../../src/SystemSettings";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ISecurityContext",
        name: "securityContext",
        type: "address",
      },
      {
        internalType: "address",
        name: "vaultAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "feeBps_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "roleId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "UnauthorizedAccess",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddressArgument",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "changedBy",
        type: "address",
      },
    ],
    name: "FeeBpsChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "securityContext",
        type: "address",
      },
    ],
    name: "SecurityContextSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "changedBy",
        type: "address",
      },
    ],
    name: "VaultAddressChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "APPROVER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ARBITER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DAO_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAUSER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REFUNDER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SYSTEM_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeBps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "securityContext",
    outputs: [
      {
        internalType: "contract ISecurityContext",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "feeBps_",
        type: "uint256",
      },
    ],
    name: "setFeeBps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISecurityContext",
        name: "_securityContext",
        type: "address",
      },
    ],
    name: "setSecurityContext",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vaultAddress_",
        type: "address",
      },
    ],
    name: "setVaultAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vaultAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001c7238038062001c728339818101604052810190620000379190620006b1565b62000053672482d87e6c5f3af160c01b6200023f60201b60201c565b6200006f67dbbd0805063eb92260c01b6200023f60201b60201c565b6200008b67e06d0046c443894f60c01b6200023f60201b60201c565b6200009c836200024260201b60201c565b620000b867534769ee58215c6360c01b6200023f60201b60201c565b620000d4673c7772d6c9b4312960c01b6200023f60201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200019a57620001256716bc2a7b62dd6d9760c01b6200023f60201b60201c565b620001416718e3a1803d9a905460c01b6200023f60201b60201c565b6200015d67a5c15f16cab9164760c01b6200023f60201b60201c565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000191906200076e565b60405180910390fd5b620001b667f3ffce014b28860a60c01b6200023f60201b60201c565b620001d267d818306bd029fe4260c01b6200023f60201b60201c565b81603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200022f67529c3fcdfb2fe5e360c01b6200023f60201b60201c565b8060348190555050505062000885565b50565b6200025e67d682175c462c8df160c01b620005bc60201b60201c565b6200027a67f42910d3c76dc49c60c01b620005bc60201b60201c565b62000296674bbf28268e2cb97060c01b620005bc60201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200033557620002e76784406cc981ca69f960c01b620005bc60201b60201c565b6200030367460913f734e5b3e060c01b620005bc60201b60201c565b6040517f26a1e04700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b62000351675b1bf950c0084c1160c01b620005bc60201b60201c565b6200036d671becfda74b5be46060c01b620005bc60201b60201c565b62000389679820354dc7a1978860c01b620005bc60201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff166391d148546000801b306040518363ffffffff1660e01b8152600401620003c9929190620007bc565b6020604051808303816000875af1158015620003e9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200040f919062000826565b506200042c676837e0ec4a3862b460c01b620005bc60201b60201c565b620004486755b58b17f87ecd4e60c01b620005bc60201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146200059c57620004b8677d060796decd9c3360c01b620005bc60201b60201c565b620004d467fa6949bf548e801e60c01b620005bc60201b60201c565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000530673db11fe9c9960ca660c01b620005bc60201b60201c565b6200054c679070a883fdd4bae260c01b620005bc60201b60201c565b7f051a1819cad198aaab96867fdf5e127eafe91783a6b4005a8caddb1a943039586200057d620005bf60201b60201c565b826040516200058e92919062000858565b60405180910390a1620005b9565b620005b8671fbf2ec7c850a66d60c01b620005bc60201b60201c565b5b50565b50565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620005f982620005cc565b9050919050565b60006200060d82620005ec565b9050919050565b6200061f8162000600565b81146200062b57600080fd5b50565b6000815190506200063f8162000614565b92915050565b6200065081620005ec565b81146200065c57600080fd5b50565b600081519050620006708162000645565b92915050565b6000819050919050565b6200068b8162000676565b81146200069757600080fd5b50565b600081519050620006ab8162000680565b92915050565b600080600060608486031215620006cd57620006cc620005c7565b5b6000620006dd868287016200062e565b9350506020620006f0868287016200065f565b925050604062000703868287016200069a565b9150509250925092565b600082825260208201905092915050565b7f496e76616c69645661756c744164647265737300000000000000000000000000600082015250565b6000620007566013836200070d565b915062000763826200071e565b602082019050919050565b60006020820190508181036000830152620007898162000747565b9050919050565b6000819050919050565b620007a58162000790565b82525050565b620007b681620005ec565b82525050565b6000604082019050620007d360008301856200079a565b620007e26020830184620007ab565b9392505050565b60008115159050919050565b6200080081620007e9565b81146200080c57600080fd5b50565b6000815190506200082081620007f5565b92915050565b6000602082840312156200083f576200083e620005c7565b5b60006200084f848285016200080f565b91505092915050565b60006040820190506200086f6000830185620007ab565b6200087e6020830184620007ab565b9392505050565b6113dd80620008956000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806372c27b621161008c57806375b238fc1161006657806375b238fc146101de57806385535cc5146101fc578063e63ab1e914610218578063e9c2651814610236576100cf565b806372c27b621461018857806372fe9938146101a457806375071d2a146101c0576100cf565b806324a9d853146100d45780634245962b146100f2578063430bf08a146101105780634d104adf1461012e5780635960ccf21461014c5780636412dd051461016a575b600080fd5b6100dc610254565b6040516100e99190611003565b60405180910390f35b6100fa61029a565b6040516101079190611037565b60405180910390f35b6101186102be565b6040516101259190611093565b60405180910390f35b610136610324565b6040516101439190611037565b60405180910390f35b610154610348565b6040516101619190611037565b60405180910390f35b61017261036c565b60405161017f919061110d565b60405180910390f35b6101a2600480360381019061019d9190611159565b610390565b005b6101be60048036038101906101b991906111c4565b610643565b005b6101c8610833565b6040516101d59190611037565b60405180910390f35b6101e6610857565b6040516101f39190611037565b60405180910390f35b6102166004803603810190610211919061121d565b61085e565b005b610220610ca4565b60405161022d9190611037565b60405180910390f35b61023e610cc8565b60405161024b9190611037565b60405180910390f35b600061026a67e9b5a30ffa0c23e360c01b610cec565b61027e674fe3ce080e79511460c01b610cec565b610292672b068f2ca9dac57a60c01b610cec565b603454905090565b7f408a36151f841709116a4e8aca4e0202874f7f54687dcb863b1ea4672dc9d8cf81565b60006102d46712255bb282586b7e60c01b610cec565b6102e867f5d62f4e896bdb9160c01b610cec565b6102fc67ed3ade706c17694e60c01b610cec565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7fbb08418a67729a078f87bbc8d02a770929bb68f5bfdf134ae2ead6ed38e2f4ae81565b7fdb9556138406326f00296e13ea2ad7db24ba82381212d816b1a40c23b466b32781565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6103a4674ee04d101761f29a60c01b610cec565b7f3b5d4cc60d3ec3516ee8ae083bd60934f6eb2a6c54b1229985c41bfb092b26036103d9670f2a974b7efe21c460c01b610cef565b6103ed67863528f50b3c80ac60c01b610cef565b61040167ddd80b0cd6d067dd60c01b610cef565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166391d1485482610446610cf2565b6040518363ffffffff1660e01b815260040161046392919061124a565b6020604051808303816000875af1158015610482573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a691906112ab565b610518576104be6747f19d920d9c7ba160c01b610cef565b6104d26783d7e279d7adbc8060c01b610cef565b806104db610cf2565b6040517f074540a200000000000000000000000000000000000000000000000000000000815260040161050f92919061124a565b60405180910390fd5b61052c6729a141a2196d8c6f60c01b610cef565b6105406713239f6f6199512460c01b610cef565b61055467799291f80089e1d560c01b610cec565b61056867ab2c5cc4d876ac3460c01b610cec565b61057c67f1cb32a4cc9893a660c01b610cec565b61059067d15336bb3f30f0c860c01b610cec565b816034541461062a576105ad672eab0b32f520c69e60c01b610cec565b6105c167a67aae7506637e0160c01b610cec565b816034819055506105dc67870fa3c80a4878bd60c01b610cec565b7fe9935ecaa85c02d153b4c4195bdabdbd7d1b20d824a25c5feb05d273203a17b36034543360405161060f9291906112d8565b60405180910390a1603360009054906101000a90505061063f565b61063e670ef3eeba882af8fb60c01b610cec565b5b5050565b610657673081627fa8992e0460c01b610cef565b6000801b61066f670f2a974b7efe21c460c01b610cef565b61068367863528f50b3c80ac60c01b610cef565b61069767ddd80b0cd6d067dd60c01b610cef565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166391d14854826106dc610cf2565b6040518363ffffffff1660e01b81526004016106f992919061124a565b6020604051808303816000875af1158015610718573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073c91906112ab565b6107ae576107546747f19d920d9c7ba160c01b610cef565b6107686783d7e279d7adbc8060c01b610cef565b80610771610cf2565b6040517f074540a20000000000000000000000000000000000000000000000000000000081526004016107a592919061124a565b60405180910390fd5b6107c26729a141a2196d8c6f60c01b610cef565b6107d66713239f6f6199512460c01b610cef565b6107ea676ba50249796b26d960c01b610cef565b6107fe6758d7a3523879d4e660c01b610cef565b61081267671542e719a4c36760c01b610cef565b61082667888a993a792e1a1e60c01b610cef565b61082f82610cfa565b5050565b7f5719df9ef2c4678b547f89e4f5ae410dbf400fc51cf3ded434c55f6adea2c43f81565b6000801b81565b610872674d10dcd44501a44c60c01b610cec565b7f3b5d4cc60d3ec3516ee8ae083bd60934f6eb2a6c54b1229985c41bfb092b26036108a7670f2a974b7efe21c460c01b610cef565b6108bb67863528f50b3c80ac60c01b610cef565b6108cf67ddd80b0cd6d067dd60c01b610cef565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166391d1485482610914610cf2565b6040518363ffffffff1660e01b815260040161093192919061124a565b6020604051808303816000875af1158015610950573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097491906112ab565b6109e65761098c6747f19d920d9c7ba160c01b610cef565b6109a06783d7e279d7adbc8060c01b610cef565b806109a9610cf2565b6040517f074540a20000000000000000000000000000000000000000000000000000000081526004016109dd92919061124a565b60405180910390fd5b6109fa6729a141a2196d8c6f60c01b610cef565b610a0e6713239f6f6199512460c01b610cef565b610a22673ce0c2b2216e641160c01b610cec565b610a366702768745096c297e60c01b610cec565b610a4a678ca85d892332734460c01b610cec565b610a5e67bb620e3c269a5de060c01b610cec565b8173ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c8b57610ac7672a37b240e4c6672460c01b610cec565b610adb6709e38e1740664f7a60c01b610cec565b610aef67442dd466abeca2c460c01b610cec565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b9a57610b3767911d80d873a6c9d660c01b610cec565b610b4b6709e962ce8b7def8260c01b610cec565b610b5f673f7d517e8b0e386c60c01b610cec565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b919061135e565b60405180910390fd5b610bae678ad0a0ce7c31372160c01b610cec565b610bc2671a127235bb1d740b60c01b610cec565b81603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610c17673a7e3f5e6d06b16e60c01b610cec565b610c2b67d9cb843f638f4f1460c01b610cec565b7fa4f45a63389e7031375b7e4422cccea56ab403ecedbd3ce1f0587acaa1999ae3603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633604051610c7e92919061137e565b60405180910390a1610ca0565b610c9f67ba8298d1a8f21bef60c01b610cec565b5b5050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b7f3b5d4cc60d3ec3516ee8ae083bd60934f6eb2a6c54b1229985c41bfb092b260381565b50565b50565b600033905090565b610d0e67d682175c462c8df160c01b610cef565b610d2267f42910d3c76dc49c60c01b610cef565b610d36674bbf28268e2cb97060c01b610cef565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610dc457610d7e6784406cc981ca69f960c01b610cef565b610d9267460913f734e5b3e060c01b610cef565b6040517f26a1e04700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610dd8675b1bf950c0084c1160c01b610cef565b610dec671becfda74b5be46060c01b610cef565b610e00679820354dc7a1978860c01b610cef565b8073ffffffffffffffffffffffffffffffffffffffff166391d148546000801b306040518363ffffffff1660e01b8152600401610e3e92919061124a565b6020604051808303816000875af1158015610e5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8191906112ab565b50610e96676837e0ec4a3862b460c01b610cef565b610eaa6755b58b17f87ecd4e60c01b610cef565b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610fd257610f11677d060796decd9c3360c01b610cef565b610f2567fa6949bf548e801e60c01b610cef565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610f79673db11fe9c9960ca660c01b610cef565b610f8d679070a883fdd4bae260c01b610cef565b7f051a1819cad198aaab96867fdf5e127eafe91783a6b4005a8caddb1a94303958610fb6610cf2565b82604051610fc592919061137e565b60405180910390a1610fe7565b610fe6671fbf2ec7c850a66d60c01b610cef565b5b50565b6000819050919050565b610ffd81610fea565b82525050565b60006020820190506110186000830184610ff4565b92915050565b6000819050919050565b6110318161101e565b82525050565b600060208201905061104c6000830184611028565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061107d82611052565b9050919050565b61108d81611072565b82525050565b60006020820190506110a86000830184611084565b92915050565b6000819050919050565b60006110d36110ce6110c984611052565b6110ae565b611052565b9050919050565b60006110e5826110b8565b9050919050565b60006110f7826110da565b9050919050565b611107816110ec565b82525050565b600060208201905061112260008301846110fe565b92915050565b600080fd5b61113681610fea565b811461114157600080fd5b50565b6000813590506111538161112d565b92915050565b60006020828403121561116f5761116e611128565b5b600061117d84828501611144565b91505092915050565b600061119182611072565b9050919050565b6111a181611186565b81146111ac57600080fd5b50565b6000813590506111be81611198565b92915050565b6000602082840312156111da576111d9611128565b5b60006111e8848285016111af565b91505092915050565b6111fa81611072565b811461120557600080fd5b50565b600081359050611217816111f1565b92915050565b60006020828403121561123357611232611128565b5b600061124184828501611208565b91505092915050565b600060408201905061125f6000830185611028565b61126c6020830184611084565b9392505050565b60008115159050919050565b61128881611273565b811461129357600080fd5b50565b6000815190506112a58161127f565b92915050565b6000602082840312156112c1576112c0611128565b5b60006112cf84828501611296565b91505092915050565b60006040820190506112ed6000830185610ff4565b6112fa6020830184611084565b9392505050565b600082825260208201905092915050565b7f496e76616c696456616c75650000000000000000000000000000000000000000600082015250565b6000611348600c83611301565b915061135382611312565b602082019050919050565b600060208201905081810360008301526113778161133b565b9050919050565b60006040820190506113936000830185611084565b6113a06020830184611084565b939250505056fea26469706673582212207dc3920438912b5d1dc3a647e0ac4cae7c826a10d37e9a1ac10306510f99ec4064736f6c63430008180033";

type SystemSettingsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SystemSettingsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SystemSettings__factory extends ContractFactory {
  constructor(...args: SystemSettingsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    securityContext: AddressLike,
    vaultAddress_: AddressLike,
    feeBps_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      securityContext,
      vaultAddress_,
      feeBps_,
      overrides || {}
    );
  }
  override deploy(
    securityContext: AddressLike,
    vaultAddress_: AddressLike,
    feeBps_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      securityContext,
      vaultAddress_,
      feeBps_,
      overrides || {}
    ) as Promise<
      SystemSettings & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SystemSettings__factory {
    return super.connect(runner) as SystemSettings__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SystemSettingsInterface {
    return new Interface(_abi) as SystemSettingsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SystemSettings {
    return new Contract(address, _abi, runner) as unknown as SystemSettings;
  }
}
